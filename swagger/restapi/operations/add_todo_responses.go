// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// AddTodoOKCode is the HTTP code returned for type AddTodoOK
const AddTodoOKCode int = 200

/*AddTodoOK Success

swagger:response addTodoOK
*/
type AddTodoOK struct {

	/*
	  In: Body
	*/
	Payload *AddTodoOKBody `json:"body,omitempty"`
}

// NewAddTodoOK creates AddTodoOK with default headers values
func NewAddTodoOK() *AddTodoOK {

	return &AddTodoOK{}
}

// WithPayload adds the payload to the add todo o k response
func (o *AddTodoOK) WithPayload(payload *AddTodoOKBody) *AddTodoOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add todo o k response
func (o *AddTodoOK) SetPayload(payload *AddTodoOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddTodoOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddTodoBadRequestCode is the HTTP code returned for type AddTodoBadRequest
const AddTodoBadRequestCode int = 400

/*AddTodoBadRequest Bad request

swagger:response addTodoBadRequest
*/
type AddTodoBadRequest struct {

	/*
	  In: Body
	*/
	Payload *AddTodoBadRequestBody `json:"body,omitempty"`
}

// NewAddTodoBadRequest creates AddTodoBadRequest with default headers values
func NewAddTodoBadRequest() *AddTodoBadRequest {

	return &AddTodoBadRequest{}
}

// WithPayload adds the payload to the add todo bad request response
func (o *AddTodoBadRequest) WithPayload(payload *AddTodoBadRequestBody) *AddTodoBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add todo bad request response
func (o *AddTodoBadRequest) SetPayload(payload *AddTodoBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddTodoBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddTodoInternalServerErrorCode is the HTTP code returned for type AddTodoInternalServerError
const AddTodoInternalServerErrorCode int = 500

/*AddTodoInternalServerError Internal server error

swagger:response addTodoInternalServerError
*/
type AddTodoInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *AddTodoInternalServerErrorBody `json:"body,omitempty"`
}

// NewAddTodoInternalServerError creates AddTodoInternalServerError with default headers values
func NewAddTodoInternalServerError() *AddTodoInternalServerError {

	return &AddTodoInternalServerError{}
}

// WithPayload adds the payload to the add todo internal server error response
func (o *AddTodoInternalServerError) WithPayload(payload *AddTodoInternalServerErrorBody) *AddTodoInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add todo internal server error response
func (o *AddTodoInternalServerError) SetPayload(payload *AddTodoInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddTodoInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
