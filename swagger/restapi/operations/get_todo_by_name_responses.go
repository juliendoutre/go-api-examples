// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetTodoByNameOKCode is the HTTP code returned for type GetTodoByNameOK
const GetTodoByNameOKCode int = 200

/*GetTodoByNameOK Success

swagger:response getTodoByNameOK
*/
type GetTodoByNameOK struct {

	/*
	  In: Body
	*/
	Payload *GetTodoByNameOKBody `json:"body,omitempty"`
}

// NewGetTodoByNameOK creates GetTodoByNameOK with default headers values
func NewGetTodoByNameOK() *GetTodoByNameOK {

	return &GetTodoByNameOK{}
}

// WithPayload adds the payload to the get todo by name o k response
func (o *GetTodoByNameOK) WithPayload(payload *GetTodoByNameOKBody) *GetTodoByNameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get todo by name o k response
func (o *GetTodoByNameOK) SetPayload(payload *GetTodoByNameOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTodoByNameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTodoByNameNotFoundCode is the HTTP code returned for type GetTodoByNameNotFound
const GetTodoByNameNotFoundCode int = 404

/*GetTodoByNameNotFound Not found

swagger:response getTodoByNameNotFound
*/
type GetTodoByNameNotFound struct {

	/*
	  In: Body
	*/
	Payload *GetTodoByNameNotFoundBody `json:"body,omitempty"`
}

// NewGetTodoByNameNotFound creates GetTodoByNameNotFound with default headers values
func NewGetTodoByNameNotFound() *GetTodoByNameNotFound {

	return &GetTodoByNameNotFound{}
}

// WithPayload adds the payload to the get todo by name not found response
func (o *GetTodoByNameNotFound) WithPayload(payload *GetTodoByNameNotFoundBody) *GetTodoByNameNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get todo by name not found response
func (o *GetTodoByNameNotFound) SetPayload(payload *GetTodoByNameNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTodoByNameNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
